Init TPM chip
=============
1) If you have not taken ownership, do so.
tpm_takeownership -z

2) SRK password must for now be Well Known Secret. If it's not, set it:
tpm_changeownerauth -s -r


Build simple-tpm-pk11
=====================
./configure && make && sudo make install


User setup
==========

1) Create key
-------------
mkdir ~/.simple-tpm-pk11/
stpm-keygen -f ~/.simple-tpm-pk11/my.key

Try the key out:
  dd if=/dev/urandom of=to-sign bs=1 count=35
  stpm-sign -k ~/.simple-tpm-pk11/my.key -f to-sign

2) Create config
----------------
echo "key my.key" > ~/.simple-tpm-pk11/config

Optionally add "log foo.log" in there too.


3) Extract the public key in SSH format
---------------------------------------
ssh-keygen -D /usr/local/lib/libsimple-tpm-pk11.so.0.0.0

Install it where you want to log in, in the usual authorized_keys way.

Try logging in using your new fancy key:
  ssh -I /usr/local/lib/libsimple-tpm-pk11.so.0.0.0 shell.example.com

4) Configure SSH to always use this module
------------------------------------------
Add this to ~/.ssh/config:
    Host *
          PKCS11Provider /usr/local/lib/libsimple-tpm-pk11.so.0.0.0

then try:
  ssh shell.example.com


Other notes, to be put in manpages
==================================
* Setting SIMPLE_TPM_PK11_DEBUG env enables more verbose logging.
* Adding "debug" to the config file does the same.


TODO
====
* Clean up code
* Key importing
* Authorized keys, both SRK and the keys.
* config option: log to stdout and/or stderr in addition to logfile
* override config location with env.
* Install in the correct place.


Reference links
===============
http://secgroup.ext.dsi.unive.it/projects/security-apis/tookan/
http://secgroup.ext.dsi.unive.it/projects/security-apis/cryptokix/
http://trousers.sourceforge.net/pkcs11.html
http://www.trustedcomputinggroup.org/resources/tcg_software_stack_tss_specification
http://www.infineon.com/dgdl/TPM+Key+Backup+and+Recovery.pdf
http://www.engadget.com/2010/02/12/christopher-tarnovsky-hacks-infineons-unhackable-chip-we-pre/


Some random notes, not instructions
===================================
openssl genrsa -out rsa-key 2048
openssl rsa -in rsa-key -modulus
# exponent is always 65537.
ssh-keygen -f rsa-key -y > rsa-key.pub
