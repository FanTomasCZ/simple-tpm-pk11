Init TPM chip
=============
1) If you have not taken ownership, do so.
tpm_takeownership -z

2) SRK password must for now be Well Known Secret. If it's not, set it:
tpm_changeownerauth -s -r


Build simple-tpm-pk11
=====================
./configure && make


For every user
==============

Create key & config
-------------------
mkdir ~/.simple-tpm-pk11/
echo key my.key > ~/.simple-tpm-pk11/config
./keygen -f ~/.simple-tpm-pk11/my.key

Try the key out
---------------
dd if=/dev/urandom of=to-sign bs=1 count=35
./sign -k ~/.simple-tpm-pk11/my.key -f to-sign


Extract the public key in SSH format
------------------------------------
ssh-keygen -D ./.libs/libsimple-tpm-pk11.so.0.0.0

Install it where you want to log in.


Log in using your new fancy key
-------------------------------
ssh -I ./.libs/libsimple-tpm-pk11.so.0.0.0 shell.example.com


TODO
====
* Clean up code
* Key importing
* Authorized keys, both SRK and the keys.
* Logging to ~/.something/log
* config option: log to stdout and/or stderr in addition to logfile
* override config location with env.
* Install in the correct place.


Reference links
===============
http://secgroup.ext.dsi.unive.it/projects/security-apis/tookan/
http://secgroup.ext.dsi.unive.it/projects/security-apis/cryptokix/
http://trousers.sourceforge.net/pkcs11.html
http://www.trustedcomputinggroup.org/resources/tcg_software_stack_tss_specification
http://www.infineon.com/dgdl/TPM+Key+Backup+and+Recovery.pdf
http://www.engadget.com/2010/02/12/christopher-tarnovsky-hacks-infineons-unhackable-chip-we-pre/


Some random notes, not instructions
===================================
openssl genrsa -out rsa-key 2048
openssl rsa -in rsa-key -modulus
# exponent is always 65537.
ssh-keygen -f rsa-key -y > rsa-key.pub
